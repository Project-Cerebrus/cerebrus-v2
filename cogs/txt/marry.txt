import discord
from discord.ext import commands
import json
import os, re, aiohttp


JSON = open('data/married/married.json',)
data = json.load(JSON)

class marry(commands.Cog, name='Marry'):
	"""You can get married to a user by using !marry @someone"""

	def __init__(self, bot):
		self.bot = bot


	@commands.command(pass_context=True)
	async def marry(self, ctx, user: discord.Member):
		server = ctx.message.guild
		author1 = ctx.message.author.mention
		author = ctx.message.author.name
		if user.mention == author1:
			msg = 'You can\'t get married to yourself crazy guy.'
			em0 = discord.Embed(description=msg, color=0XF23636)
			await ctx.send(embed=em0)
		else:
				desc = ":ring:" + author + " *has proposed to* " + user.name + ":ring:"
				name = ":church:" + user.name + ",  Do you accept ? :church:"
				em = discord.Embed(description=desc, color=0XF23636)
				em.add_field(name=name, value='Type `yes` to accept or `no` to decline.')
				await ctx.send(embed=em)
				try:
					response = await self.bot.wait_for("message", check = lambda msg: msg.author == user, timeout = 30)

					if response.content.lower() == "yes":
						await self._create_author(server, ctx, user)
						await self._create_user(server, ctx, user)
						msg = ":heart: Congratulations " + author + " and " + user.name + " :heart:"
						em1 = discord.Embed(description=msg, color=0XF23636)
						await ctx.send(embed=em1)
						json.dump(JSON, data)
					else:
						msg = "The proposal between " + author + " and " + user.name + " has been declined."
						em2 = discord.Embed(description=msg, color=0XF23636)
						await ctx.send(embed=em2)
				except:
					msg = "The proposal between " + author + " and " + user.name + " has been declined."
					em2 = discord.Embed(description=msg, color=0XF23636)
					await ctx.send(embed=em2)
	

	@commands.command(pass_context=True)
	async def divorce(self, ctx, user: discord.Member):
		author = ctx.message.author.name
		server = ctx.message.server
		if user.mention == author:
			em0 = discord.Embed(description='You cant\'t divorce to yourself crazy guy!', color=0XF23636)
			await ctx.send(embed=em0)
		else:
			if user.name in data[server.id]["user"][author]["married_to"]:
				await self._divorce(server, ctx, user)
				me = ctx.message.author.name
				msg = ':broken_heart:  ' + me + ' *has divorced to* ' + user.name + ' :broken_heart:'
				em = discord.Embed(description=msg, color=0XF23636)
				await ctx.send(embed=em)
			else:
				msg = 'You can\'t divorce to the user because you aren\'t married to him.'
				em = discord.Embed(description=msg, color=0XF23636)
				await ctx.send(embed=em)

	async def _create_author(self, server, ctx, user):
		author = ctx.message.author.name
		if server.id not in data:
			data[server.id] = {}
			json.dump(JSON, data)
		if "user" not in data[server.id]:
			data[server.id]["user"] = {}
			json.dump(JSON, data)
		if author not in data[server.id]["user"]:
			data[server.id]["user"][author] = {}
			json.dump(JSON, data)
		if "married_to" not in data[server.id]["user"][author]:
			data[server.id]["user"][author]["married_to"] = {}
			json.dump(JSON, data)
		if user.name not in data[server.id]["user"][author]["married_to"]:
			data[server.id]["user"][author]["married_to"][user.name] = {}
		json.dump(JSON, data)
			#if author in data[server.id]["user"]:
			#	data[server.id]["user"][author]["married_to"] = user.name
			#	json.dump(JSON, data)
			#else:
			#	data[server.id]["user"] = author
			#	data[server.id]["user"][author]["married_to"] = user.name
			#	json.dump(JSON, data)


	async def _create_user(self, server, ctx, user):
		author = ctx.message.author.name
		if server.id not in data:
			data[server.id] = {}
			json.dump(JSON, data)
		if "user" not in data[server.id]:
			data[server.id]["user"] = {}
			json.dump(JSON, data)
		if user.name not in data[server.id]["user"]:
			data[server.id]["user"][user.name] = {}
			json.dump(JSON, data)
		if "married_to" not in data[server.id]["user"][user.name]:
			data[server.id]["user"][user.name]["married_to"] = {}
			json.dump(JSON, data)
		if author not in data[server.id]["user"][user.name]["married_to"]:
			data[server.id]["user"][user.name]["married_to"][author] = {}
		json.dump(JSON, data)
			#if author in data[server.id]["user"]:
			#	data[server.id]["user"][author]["married_to"] = user.name
			#	json.dump(JSON, data)
			#else:
			#	data[server.id]["user"] = author
			#	data[server.id]["user"][author]["married_to"] = user.name
			#	json.dump(JSON, data)

	async def _divorce(self, server, ctx, user):
		author = ctx.message.author.name
		del data[server.id]["user"][author]["married_to"][user.name]
		del data[server.id]["user"][user.name]["married_to"][author]
		json.dump(JSON, data)







def setup(bot):
	bot.add_cog(marry(bot))